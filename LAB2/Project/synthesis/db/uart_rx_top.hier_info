|uart_rx_only_top
CLOCK_50 => sync_n_edgedetector:b2v_inst.clock
CLOCK_50 => baud_tick_generator:b2v_inst2.clock
CLOCK_50 => buffer_registers:b2v_inst3.clock
CLOCK_50 => uart_rx_fsm:b2v_inst9.clock
GPIO_1[1] => sync_n_edgedetector:b2v_inst.data_in
KEY[0] => sync_n_edgedetector:b2v_inst.reset_n
KEY[0] => baud_tick_generator:b2v_inst2.reset_n
KEY[0] => buffer_registers:b2v_inst3.reset_n
KEY[0] => uart_rx_fsm:b2v_inst9.reset_n
HEX0[0] <= hex2sevseg_w_control:b2v_inst6.seg_o[0]
HEX0[1] <= hex2sevseg_w_control:b2v_inst6.seg_o[1]
HEX0[2] <= hex2sevseg_w_control:b2v_inst6.seg_o[2]
HEX0[3] <= hex2sevseg_w_control:b2v_inst6.seg_o[3]
HEX0[4] <= hex2sevseg_w_control:b2v_inst6.seg_o[4]
HEX0[5] <= hex2sevseg_w_control:b2v_inst6.seg_o[5]
HEX0[6] <= hex2sevseg_w_control:b2v_inst6.seg_o[6]
HEX1[0] <= hex2sevseg_w_control:b2v_inst4.seg_o[0]
HEX1[1] <= hex2sevseg_w_control:b2v_inst4.seg_o[1]
HEX1[2] <= hex2sevseg_w_control:b2v_inst4.seg_o[2]
HEX1[3] <= hex2sevseg_w_control:b2v_inst4.seg_o[3]
HEX1[4] <= hex2sevseg_w_control:b2v_inst4.seg_o[4]
HEX1[5] <= hex2sevseg_w_control:b2v_inst4.seg_o[5]
HEX1[6] <= hex2sevseg_w_control:b2v_inst4.seg_o[6]
LEDR[0] <= uart_rx_fsm:b2v_inst9.complete_o


|uart_rx_only_top|sync_n_edgeDetector:b2v_inst
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_only_top|baud_tick_generator:b2v_inst2
reset_n => clks_por_bit[0].ACLR
reset_n => clks_por_bit[1].ACLR
reset_n => clks_por_bit[2].ACLR
reset_n => clks_por_bit[3].ACLR
reset_n => clks_por_bit[4].ACLR
reset_n => clks_por_bit[5].ACLR
reset_n => clks_por_bit[6].ACLR
reset_n => clks_por_bit[7].ACLR
reset_n => clks_por_bit[8].ACLR
reset_n => clks_por_bit[9].ACLR
reset_n => clks_por_bit[10].ACLR
reset_n => tick.ACLR
clock => clks_por_bit[0].CLK
clock => clks_por_bit[1].CLK
clock => clks_por_bit[2].CLK
clock => clks_por_bit[3].CLK
clock => clks_por_bit[4].CLK
clock => clks_por_bit[5].CLK
clock => clks_por_bit[6].CLK
clock => clks_por_bit[7].CLK
clock => clks_por_bit[8].CLK
clock => clks_por_bit[9].CLK
clock => clks_por_bit[10].CLK
clock => tick.CLK
run_i => next_tick.OUTPUTSELECT
run_i => clks_por_bit[10].ENA
run_i => clks_por_bit[9].ENA
run_i => clks_por_bit[8].ENA
run_i => clks_por_bit[7].ENA
run_i => clks_por_bit[6].ENA
run_i => clks_por_bit[5].ENA
run_i => clks_por_bit[4].ENA
run_i => clks_por_bit[3].ENA
run_i => clks_por_bit[2].ENA
run_i => clks_por_bit[1].ENA
run_i => clks_por_bit[0].ENA
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_clks_por_bit.OUTPUTSELECT
start_bit_i => next_tick.OUTPUTSELECT
tick_o <= tick.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_only_top|buffer_registers:b2v_inst3
clock => reg[1].CLK
clock => reg[2].CLK
clock => reg[3].CLK
clock => reg[4].CLK
clock => reg[5].CLK
clock => reg[6].CLK
clock => reg[7].CLK
clock => reg[8].CLK
clock => reg[9].CLK
clock => buf[0].CLK
clock => buf[1].CLK
clock => buf[2].CLK
clock => buf[3].CLK
clock => buf[4].CLK
clock => buf[5].CLK
clock => buf[6].CLK
clock => buf[7].CLK
reset_n => reg[1].PRESET
reset_n => reg[2].PRESET
reset_n => reg[3].PRESET
reset_n => reg[4].PRESET
reset_n => reg[5].PRESET
reset_n => reg[6].PRESET
reset_n => reg[7].PRESET
reset_n => reg[8].PRESET
reset_n => reg[9].PRESET
reset_n => buf[0].ACLR
reset_n => buf[1].ACLR
reset_n => buf[2].ACLR
reset_n => buf[3].ACLR
reset_n => buf[4].ACLR
reset_n => buf[5].ACLR
reset_n => buf[6].ACLR
reset_n => buf[7].ACLR
data_rx_i => next_reg.DATAB
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
tick_i => next_reg.OUTPUTSELECT
store_i => next_reg[9].OUTPUTSELECT
store_i => next_reg[8].OUTPUTSELECT
store_i => next_reg[7].OUTPUTSELECT
store_i => next_reg[6].OUTPUTSELECT
store_i => next_reg[5].OUTPUTSELECT
store_i => next_reg[4].OUTPUTSELECT
store_i => next_reg[3].OUTPUTSELECT
store_i => next_reg[2].OUTPUTSELECT
store_i => next_reg[1].OUTPUTSELECT
store_i => buf[7].ENA
store_i => buf[6].ENA
store_i => buf[5].ENA
store_i => buf[4].ENA
store_i => buf[3].ENA
store_i => buf[2].ENA
store_i => buf[1].ENA
store_i => buf[0].ENA
data_rx_o[0] <= buf[0].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[1] <= buf[1].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[2] <= buf[2].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[3] <= buf[3].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[4] <= buf[4].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[5] <= buf[5].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[6] <= buf[6].DB_MAX_OUTPUT_PORT_TYPE
data_rx_o[7] <= buf[7].DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_only_top|hex2sevseg_w_control:b2v_inst4
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => ripple_blank_n_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => ripple_blank_n_o.OUTPUTSELECT
ripple_blank_n_i => Mux7.IN15
ripple_blank_n_i => Mux1.IN15
ripple_blank_n_i => Mux2.IN15
ripple_blank_n_i => Mux3.IN15
ripple_blank_n_i => Mux4.IN15
ripple_blank_n_i => Mux5.IN15
ripple_blank_n_i => Mux6.IN15
hexa_i[0] => Mux0.IN19
hexa_i[0] => Mux1.IN19
hexa_i[0] => Mux2.IN19
hexa_i[0] => Mux3.IN19
hexa_i[0] => Mux4.IN19
hexa_i[0] => Mux5.IN19
hexa_i[0] => Mux6.IN19
hexa_i[0] => Mux7.IN19
hexa_i[1] => Mux0.IN18
hexa_i[1] => Mux1.IN18
hexa_i[1] => Mux2.IN18
hexa_i[1] => Mux3.IN18
hexa_i[1] => Mux4.IN18
hexa_i[1] => Mux5.IN18
hexa_i[1] => Mux6.IN18
hexa_i[1] => Mux7.IN18
hexa_i[2] => Mux0.IN17
hexa_i[2] => Mux1.IN17
hexa_i[2] => Mux2.IN17
hexa_i[2] => Mux3.IN17
hexa_i[2] => Mux4.IN17
hexa_i[2] => Mux5.IN17
hexa_i[2] => Mux6.IN17
hexa_i[2] => Mux7.IN17
hexa_i[3] => Mux0.IN16
hexa_i[3] => Mux1.IN16
hexa_i[3] => Mux2.IN16
hexa_i[3] => Mux3.IN16
hexa_i[3] => Mux4.IN16
hexa_i[3] => Mux5.IN16
hexa_i[3] => Mux6.IN16
hexa_i[3] => Mux7.IN16
ripple_blank_n_o <= ripple_blank_n_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[0] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[1] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[2] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[3] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[4] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[5] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[6] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_only_top|hex2sevseg_w_control:b2v_inst6
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => seg_o.OUTPUTSELECT
blank_n_i => ripple_blank_n_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => seg_o.OUTPUTSELECT
lamp_test_n_i => ripple_blank_n_o.OUTPUTSELECT
ripple_blank_n_i => Mux7.IN15
ripple_blank_n_i => Mux1.IN15
ripple_blank_n_i => Mux2.IN15
ripple_blank_n_i => Mux3.IN15
ripple_blank_n_i => Mux4.IN15
ripple_blank_n_i => Mux5.IN15
ripple_blank_n_i => Mux6.IN15
hexa_i[0] => Mux0.IN19
hexa_i[0] => Mux1.IN19
hexa_i[0] => Mux2.IN19
hexa_i[0] => Mux3.IN19
hexa_i[0] => Mux4.IN19
hexa_i[0] => Mux5.IN19
hexa_i[0] => Mux6.IN19
hexa_i[0] => Mux7.IN19
hexa_i[1] => Mux0.IN18
hexa_i[1] => Mux1.IN18
hexa_i[1] => Mux2.IN18
hexa_i[1] => Mux3.IN18
hexa_i[1] => Mux4.IN18
hexa_i[1] => Mux5.IN18
hexa_i[1] => Mux6.IN18
hexa_i[1] => Mux7.IN18
hexa_i[2] => Mux0.IN17
hexa_i[2] => Mux1.IN17
hexa_i[2] => Mux2.IN17
hexa_i[2] => Mux3.IN17
hexa_i[2] => Mux4.IN17
hexa_i[2] => Mux5.IN17
hexa_i[2] => Mux6.IN17
hexa_i[2] => Mux7.IN17
hexa_i[3] => Mux0.IN16
hexa_i[3] => Mux1.IN16
hexa_i[3] => Mux2.IN16
hexa_i[3] => Mux3.IN16
hexa_i[3] => Mux4.IN16
hexa_i[3] => Mux5.IN16
hexa_i[3] => Mux6.IN16
hexa_i[3] => Mux7.IN16
ripple_blank_n_o <= ripple_blank_n_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[0] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[1] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[2] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[3] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[4] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[5] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE
seg_o[6] <= seg_o.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_only_top|uart_rx_fsm:b2v_inst9
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => state~1.DATAIN
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => state~3.DATAIN
data_rx_i => next_state.DATAB
data_rx_i => next_state.DATAB
data_rx_i => next_count.OUTPUTSELECT
data_rx_i => next_count.OUTPUTSELECT
data_rx_i => next_count.OUTPUTSELECT
data_rx_i => next_count.OUTPUTSELECT
data_rx_i => next_state.DATAB
data_rx_i => next_state.DATAB
trigger_i => next_state.OUTPUTSELECT
trigger_i => next_state.OUTPUTSELECT
trigger_i => next_state.OUTPUTSELECT
trigger_i => next_state.OUTPUTSELECT
trigger_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_count.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
tick_i => next_state.OUTPUTSELECT
isrunning_o <= isrunning_o.DB_MAX_OUTPUT_PORT_TYPE
isstart_bit_o <= isstart_bit_o.DB_MAX_OUTPUT_PORT_TYPE
complete_o <= complete_o.DB_MAX_OUTPUT_PORT_TYPE


