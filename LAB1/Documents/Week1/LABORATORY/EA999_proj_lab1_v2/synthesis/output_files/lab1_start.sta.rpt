TimeQuest Timing Analyzer report for lab1_start
Wed Mar 14 17:40:12 2018
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'CLOCK_50'
 12. Slow Model Setup: 'modulo_divider:inst2|count[24]'
 13. Slow Model Hold: 'CLOCK_50'
 14. Slow Model Hold: 'modulo_divider:inst2|count[24]'
 15. Slow Model Minimum Pulse Width: 'CLOCK_50'
 16. Slow Model Minimum Pulse Width: 'modulo_divider:inst2|count[24]'
 17. Clock to Output Times
 18. Minimum Clock to Output Times
 19. Fast Model Setup Summary
 20. Fast Model Hold Summary
 21. Fast Model Recovery Summary
 22. Fast Model Removal Summary
 23. Fast Model Minimum Pulse Width Summary
 24. Fast Model Setup: 'CLOCK_50'
 25. Fast Model Setup: 'modulo_divider:inst2|count[24]'
 26. Fast Model Hold: 'CLOCK_50'
 27. Fast Model Hold: 'modulo_divider:inst2|count[24]'
 28. Fast Model Minimum Pulse Width: 'CLOCK_50'
 29. Fast Model Minimum Pulse Width: 'modulo_divider:inst2|count[24]'
 30. Clock to Output Times
 31. Minimum Clock to Output Times
 32. Multicorner Timing Analysis Summary
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; lab1_start                                                        ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                         ;
+--------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------------------------------+
; Clock Name                     ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                            ;
+--------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------------------------------+
; CLOCK_50                       ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                       ;
; modulo_divider:inst2|count[24] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { modulo_divider:inst2|count[24] } ;
+--------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                               ;
+------------+-----------------+--------------------------------+-------------------------------------------------------+
; Fmax       ; Restricted Fmax ; Clock Name                     ; Note                                                  ;
+------------+-----------------+--------------------------------+-------------------------------------------------------+
; 253.81 MHz ; 253.81 MHz      ; CLOCK_50                       ;                                                       ;
; 794.28 MHz ; 450.05 MHz      ; modulo_divider:inst2|count[24] ; limit due to high minimum pulse width violation (tch) ;
+------------+-----------------+--------------------------------+-------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+---------------------------------------------------------+
; Slow Model Setup Summary                                ;
+--------------------------------+--------+---------------+
; Clock                          ; Slack  ; End Point TNS ;
+--------------------------------+--------+---------------+
; CLOCK_50                       ; -2.940 ; -44.865       ;
; modulo_divider:inst2|count[24] ; -0.259 ; -0.485        ;
+--------------------------------+--------+---------------+


+---------------------------------------------------------+
; Slow Model Hold Summary                                 ;
+--------------------------------+--------+---------------+
; Clock                          ; Slack  ; End Point TNS ;
+--------------------------------+--------+---------------+
; CLOCK_50                       ; -2.504 ; -2.504        ;
; modulo_divider:inst2|count[24] ; 0.445  ; 0.000         ;
+--------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+---------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                  ;
+--------------------------------+--------+---------------+
; Clock                          ; Slack  ; End Point TNS ;
+--------------------------------+--------+---------------+
; CLOCK_50                       ; -1.631 ; -32.181       ;
; modulo_divider:inst2|count[24] ; -0.611 ; -4.888        ;
+--------------------------------+--------+---------------+


+------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                   ;
+--------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                      ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; -2.940 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.975      ;
; -2.860 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.895      ;
; -2.780 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.815      ;
; -2.700 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.735      ;
; -2.676 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.711      ;
; -2.637 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.672      ;
; -2.596 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.631      ;
; -2.557 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.592      ;
; -2.557 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.592      ;
; -2.526 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.561      ;
; -2.516 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.551      ;
; -2.477 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.512      ;
; -2.477 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.512      ;
; -2.446 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.481      ;
; -2.443 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.478      ;
; -2.436 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.471      ;
; -2.397 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.432      ;
; -2.397 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.432      ;
; -2.366 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.401      ;
; -2.363 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.398      ;
; -2.317 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.352      ;
; -2.306 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.341      ;
; -2.286 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.321      ;
; -2.283 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.318      ;
; -2.262 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.297      ;
; -2.226 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.261      ;
; -2.223 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.258      ;
; -2.206 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.241      ;
; -2.203 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.238      ;
; -2.182 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.217      ;
; -2.182 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.217      ;
; -2.147 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.182      ;
; -2.146 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.181      ;
; -2.143 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.178      ;
; -2.143 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.178      ;
; -2.126 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.161      ;
; -2.102 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.137      ;
; -2.102 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.137      ;
; -2.067 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.102      ;
; -2.066 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.101      ;
; -2.063 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.098      ;
; -2.063 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.098      ;
; -2.046 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.081      ;
; -2.029 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.064      ;
; -2.022 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.057      ;
; -2.022 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.057      ;
; -2.022 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.057      ;
; -1.987 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.022      ;
; -1.987 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.022      ;
; -1.983 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.018      ;
; -1.983 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.018      ;
; -1.966 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.001      ;
; -1.949 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.984      ;
; -1.942 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.977      ;
; -1.942 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.977      ;
; -1.942 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.977      ;
; -1.907 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.942      ;
; -1.907 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.942      ;
; -1.903 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.938      ;
; -1.903 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.938      ;
; -1.892 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.927      ;
; -1.869 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.904      ;
; -1.867 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.902      ;
; -1.862 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.897      ;
; -1.862 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.897      ;
; -1.827 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.862      ;
; -1.823 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.858      ;
; -1.823 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.858      ;
; -1.812 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.847      ;
; -1.802 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[12] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.840      ;
; -1.789 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.824      ;
; -1.787 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.822      ;
; -1.787 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.822      ;
; -1.782 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.817      ;
; -1.782 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.817      ;
; -1.768 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.803      ;
; -1.747 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.782      ;
; -1.743 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.778      ;
; -1.743 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.778      ;
; -1.733 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.768      ;
; -1.732 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.767      ;
; -1.726 ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.761      ;
; -1.722 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[11] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.760      ;
; -1.709 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.744      ;
; -1.707 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.742      ;
; -1.707 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.742      ;
; -1.702 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.737      ;
; -1.688 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.723      ;
; -1.663 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.698      ;
; -1.663 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.698      ;
; -1.653 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.688      ;
; -1.652 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.687      ;
; -1.646 ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.681      ;
; -1.642 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[10] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 2.680      ;
; -1.629 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.664      ;
; -1.627 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.662      ;
; -1.627 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.662      ;
; -1.608 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.643      ;
; -1.608 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.643      ;
; -1.583 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 2.618      ;
+--------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'modulo_divider:inst2|count[24]'                                                                                       ;
+--------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node  ; Launch Clock                   ; Latch Clock                    ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; -0.259 ; inst4[2]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 1.297      ;
; -0.232 ; inst4[0]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 1.270      ;
; -0.226 ; inst4[1]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 1.264      ;
; 0.114  ; inst4[0]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.924      ;
; 0.115  ; inst4[0]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.923      ;
; 0.122  ; inst4[1]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.916      ;
; 0.307  ; inst4[0]  ; inst4[0] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.731      ;
; 0.307  ; inst4[3]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.731      ;
; 0.307  ; inst4[2]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.731      ;
; 0.307  ; inst4[1]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.731      ;
+--------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                                      ;
+--------+--------------------------------+--------------------------------+--------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                      ; To Node                        ; Launch Clock                   ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------+--------------------------------+--------------------------------+-------------+--------------+------------+------------+
; -2.504 ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; CLOCK_50    ; 0.000        ; 2.856      ; 0.915      ;
; -2.004 ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; CLOCK_50    ; -0.500       ; 2.856      ; 0.915      ;
; 0.445  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[0]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.960  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.246      ;
; 0.964  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[1]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.250      ;
; 0.964  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.250      ;
; 0.964  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.250      ;
; 0.964  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.250      ;
; 0.967  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.253      ;
; 0.968  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.254      ;
; 0.968  ; modulo_divider:inst2|count[22] ; modulo_divider:inst2|count[22] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.254      ;
; 0.969  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.255      ;
; 0.969  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.255      ;
; 0.969  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.255      ;
; 0.969  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.255      ;
; 0.969  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.255      ;
; 1.003  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[21] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.289      ;
; 1.003  ; modulo_divider:inst2|count[23] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.289      ;
; 1.004  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[2]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.290      ;
; 1.004  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.290      ;
; 1.007  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.293      ;
; 1.008  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.294      ;
; 1.008  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.294      ;
; 1.008  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.294      ;
; 1.008  ; modulo_divider:inst2|count[18] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.294      ;
; 1.008  ; modulo_divider:inst2|count[19] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.294      ;
; 1.229  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[1]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.515      ;
; 1.392  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.678      ;
; 1.396  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[2]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.682      ;
; 1.396  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.682      ;
; 1.396  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.682      ;
; 1.399  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.685      ;
; 1.400  ; modulo_divider:inst2|count[22] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.686      ;
; 1.400  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.686      ;
; 1.401  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.687      ;
; 1.401  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.687      ;
; 1.401  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.687      ;
; 1.436  ; modulo_divider:inst2|count[23] ; modulo_divider:inst2|count[24] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.722      ;
; 1.436  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[22] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.722      ;
; 1.437  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.723      ;
; 1.437  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.723      ;
; 1.440  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.726      ;
; 1.441  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.727      ;
; 1.441  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.727      ;
; 1.441  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.727      ;
; 1.441  ; modulo_divider:inst2|count[19] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.727      ;
; 1.441  ; modulo_divider:inst2|count[18] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.727      ;
; 1.472  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.758      ;
; 1.476  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.762      ;
; 1.476  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.762      ;
; 1.476  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.762      ;
; 1.479  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.765      ;
; 1.480  ; modulo_divider:inst2|count[22] ; modulo_divider:inst2|count[24] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.766      ;
; 1.480  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.766      ;
; 1.481  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.767      ;
; 1.481  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.767      ;
; 1.497  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.783      ;
; 1.502  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[21] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.788      ;
; 1.504  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 1.787      ;
; 1.516  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.802      ;
; 1.517  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.803      ;
; 1.520  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.806      ;
; 1.521  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.807      ;
; 1.521  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.807      ;
; 1.521  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.807      ;
; 1.521  ; modulo_divider:inst2|count[18] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.807      ;
; 1.552  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.838      ;
; 1.556  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.842      ;
; 1.556  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.842      ;
; 1.556  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.842      ;
; 1.559  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.845      ;
; 1.560  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.846      ;
; 1.561  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.847      ;
; 1.565  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 1.848      ;
; 1.577  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.863      ;
; 1.582  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[22] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.868      ;
; 1.584  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 1.867      ;
; 1.596  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[24] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.882      ;
; 1.600  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.886      ;
; 1.601  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.887      ;
; 1.601  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.887      ;
; 1.601  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.887      ;
; 1.611  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.897      ;
; 1.615  ; modulo_divider:inst2|count[19] ; modulo_divider:inst2|count[21] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.901      ;
; 1.632  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.918      ;
; 1.636  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.922      ;
; 1.636  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.922      ;
; 1.639  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.925      ;
; 1.640  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.926      ;
; 1.645  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 1.928      ;
; 1.645  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 1.928      ;
; 1.657  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.943      ;
; 1.660  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[2]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.946      ;
; 1.662  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.948      ;
; 1.664  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 1.947      ;
; 1.680  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.966      ;
; 1.681  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.967      ;
; 1.681  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.967      ;
; 1.691  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.977      ;
; 1.691  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 1.977      ;
+--------+--------------------------------+--------------------------------+--------------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'modulo_divider:inst2|count[24]'                                                                                       ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node  ; Launch Clock                   ; Latch Clock                    ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; 0.445 ; inst4[0]  ; inst4[0] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; inst4[1]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; inst4[2]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; inst4[3]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.731      ;
; 0.630 ; inst4[1]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.916      ;
; 0.637 ; inst4[0]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.923      ;
; 0.638 ; inst4[0]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.924      ;
; 0.978 ; inst4[1]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 1.264      ;
; 0.984 ; inst4[0]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 1.270      ;
; 1.011 ; inst4[2]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 1.297      ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                         ;
+--------+--------------+----------------+------------------+----------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+----------+------------+--------------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                       ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[16] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[16] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[17] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[17] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[18] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[18] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[19] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[19] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[20] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[20] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[21] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[21] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[22] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[22] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[23] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[23] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[24] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[24] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[5]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[5]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[6]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[6]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[7]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[7]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[8]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[8]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[9]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[9]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[16]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[16]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[17]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[17]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[18]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[18]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[19]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[19]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[20]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[20]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[21]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[21]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[22]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[22]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[23]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[23]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[24]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[24]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[6]|clk             ;
+--------+--------------+----------------+------------------+----------+------------+--------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'modulo_divider:inst2|count[24]'                                                                           ;
+--------+--------------+----------------+------------------+--------------------------------+------------+----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                          ; Clock Edge ; Target                           ;
+--------+--------------+----------------+------------------+--------------------------------+------------+----------------------------------+
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]                         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]                         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]                         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]                         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]                         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]                         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]                         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]|clk                     ;
+--------+--------------+----------------+------------------+--------------------------------+------------+----------------------------------+


+----------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                    ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; Data Port ; Clock Port                     ; Rise  ; Fall  ; Clock Edge ; Clock Reference                ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; HEX0[*]   ; modulo_divider:inst2|count[24] ; 8.555 ; 8.555 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[0]  ; modulo_divider:inst2|count[24] ; 8.498 ; 8.498 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[1]  ; modulo_divider:inst2|count[24] ; 8.555 ; 8.555 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[2]  ; modulo_divider:inst2|count[24] ; 8.418 ; 8.418 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[3]  ; modulo_divider:inst2|count[24] ; 8.541 ; 8.541 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[4]  ; modulo_divider:inst2|count[24] ; 8.212 ; 8.212 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[5]  ; modulo_divider:inst2|count[24] ; 8.224 ; 8.224 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[6]  ; modulo_divider:inst2|count[24] ; 8.222 ; 8.222 ; Rise       ; modulo_divider:inst2|count[24] ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+


+----------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                            ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; Data Port ; Clock Port                     ; Rise  ; Fall  ; Clock Edge ; Clock Reference                ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; HEX0[*]   ; modulo_divider:inst2|count[24] ; 7.175 ; 7.175 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[0]  ; modulo_divider:inst2|count[24] ; 7.481 ; 7.481 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[1]  ; modulo_divider:inst2|count[24] ; 7.518 ; 7.518 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[2]  ; modulo_divider:inst2|count[24] ; 7.391 ; 7.391 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[3]  ; modulo_divider:inst2|count[24] ; 7.498 ; 7.498 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[4]  ; modulo_divider:inst2|count[24] ; 7.178 ; 7.178 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[5]  ; modulo_divider:inst2|count[24] ; 7.175 ; 7.175 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[6]  ; modulo_divider:inst2|count[24] ; 7.180 ; 7.180 ; Rise       ; modulo_divider:inst2|count[24] ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+


+---------------------------------------------------------+
; Fast Model Setup Summary                                ;
+--------------------------------+--------+---------------+
; Clock                          ; Slack  ; End Point TNS ;
+--------------------------------+--------+---------------+
; CLOCK_50                       ; -0.649 ; -5.256        ;
; modulo_divider:inst2|count[24] ; 0.512  ; 0.000         ;
+--------------------------------+--------+---------------+


+---------------------------------------------------------+
; Fast Model Hold Summary                                 ;
+--------------------------------+--------+---------------+
; Clock                          ; Slack  ; End Point TNS ;
+--------------------------------+--------+---------------+
; CLOCK_50                       ; -1.691 ; -1.691        ;
; modulo_divider:inst2|count[24] ; 0.215  ; 0.000         ;
+--------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+---------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                  ;
+--------------------------------+--------+---------------+
; Clock                          ; Slack  ; End Point TNS ;
+--------------------------------+--------+---------------+
; CLOCK_50                       ; -1.380 ; -26.380       ;
; modulo_divider:inst2|count[24] ; -0.500 ; -4.000        ;
+--------------------------------+--------+---------------+


+------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                   ;
+--------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                      ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; -0.649 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.678      ;
; -0.614 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.643      ;
; -0.579 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.608      ;
; -0.557 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.586      ;
; -0.544 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.573      ;
; -0.535 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.564      ;
; -0.522 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.551      ;
; -0.500 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.529      ;
; -0.500 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.529      ;
; -0.487 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.516      ;
; -0.465 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.494      ;
; -0.465 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.494      ;
; -0.452 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.481      ;
; -0.450 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.479      ;
; -0.448 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.477      ;
; -0.430 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.459      ;
; -0.430 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.459      ;
; -0.415 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.444      ;
; -0.413 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.442      ;
; -0.395 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.424      ;
; -0.380 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.409      ;
; -0.378 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.407      ;
; -0.373 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.402      ;
; -0.358 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.387      ;
; -0.345 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.374      ;
; -0.343 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.372      ;
; -0.338 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.367      ;
; -0.336 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.365      ;
; -0.323 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.352      ;
; -0.323 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.352      ;
; -0.310 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.339      ;
; -0.303 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.332      ;
; -0.303 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.332      ;
; -0.301 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.330      ;
; -0.301 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.330      ;
; -0.288 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.317      ;
; -0.288 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.317      ;
; -0.275 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.304      ;
; -0.268 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.297      ;
; -0.268 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.297      ;
; -0.266 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.295      ;
; -0.266 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.295      ;
; -0.253 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.282      ;
; -0.253 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.282      ;
; -0.253 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.282      ;
; -0.249 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.278      ;
; -0.240 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.269      ;
; -0.234 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.263      ;
; -0.233 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.262      ;
; -0.231 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.260      ;
; -0.231 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.260      ;
; -0.218 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.247      ;
; -0.218 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.247      ;
; -0.218 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.247      ;
; -0.214 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.243      ;
; -0.205 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.234      ;
; -0.199 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.228      ;
; -0.198 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.227      ;
; -0.196 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.225      ;
; -0.196 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.225      ;
; -0.186 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.215      ;
; -0.183 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.212      ;
; -0.183 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.212      ;
; -0.179 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.208      ;
; -0.174 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.203      ;
; -0.164 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.193      ;
; -0.161 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.190      ;
; -0.161 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.190      ;
; -0.151 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.180      ;
; -0.151 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.180      ;
; -0.148 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.177      ;
; -0.148 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.177      ;
; -0.144 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.173      ;
; -0.139 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.168      ;
; -0.129 ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.158      ;
; -0.126 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.155      ;
; -0.126 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.155      ;
; -0.124 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.153      ;
; -0.116 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.145      ;
; -0.116 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.145      ;
; -0.115 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[12] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.147      ;
; -0.113 ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.142      ;
; -0.111 ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.140      ;
; -0.109 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.138      ;
; -0.104 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.133      ;
; -0.104 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.133      ;
; -0.091 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[14] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.120      ;
; -0.091 ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.120      ;
; -0.089 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.118      ;
; -0.081 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.110      ;
; -0.081 ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.110      ;
; -0.080 ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[11] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.112      ;
; -0.076 ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.105      ;
; -0.074 ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[15] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.103      ;
; -0.069 ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.098      ;
; -0.069 ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.098      ;
; -0.056 ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[13] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.085      ;
; -0.054 ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.083      ;
; -0.054 ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.083      ;
; -0.046 ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.075      ;
+--------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'modulo_divider:inst2|count[24]'                                                                                      ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node  ; Launch Clock                   ; Latch Clock                    ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; 0.512 ; inst4[2]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.520      ;
; 0.515 ; inst4[0]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.517      ;
; 0.517 ; inst4[1]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.515      ;
; 0.632 ; inst4[0]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.400      ;
; 0.633 ; inst4[0]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.399      ;
; 0.636 ; inst4[1]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.396      ;
; 0.665 ; inst4[0]  ; inst4[0] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; inst4[3]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; inst4[2]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; inst4[1]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 1.000        ; 0.000      ; 0.367      ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                                      ;
+--------+--------------------------------+--------------------------------+--------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                      ; To Node                        ; Launch Clock                   ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------+--------------------------------+--------------------------------+-------------+--------------+------------+------------+
; -1.691 ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; CLOCK_50    ; 0.000        ; 1.793      ; 0.395      ;
; -1.191 ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; CLOCK_50    ; -0.500       ; 1.793      ; 0.395      ;
; 0.215  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[0]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.353  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.505      ;
; 0.356  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.508      ;
; 0.356  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.508      ;
; 0.356  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.508      ;
; 0.357  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.509      ;
; 0.358  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.358  ; modulo_divider:inst2|count[22] ; modulo_divider:inst2|count[22] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.359  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[1]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.359  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.359  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.359  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.359  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.359  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.367  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[2]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[21] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367  ; modulo_divider:inst2|count[23] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.369  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.521      ;
; 0.369  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.521      ;
; 0.369  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.521      ;
; 0.370  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.522      ;
; 0.370  ; modulo_divider:inst2|count[18] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.522      ;
; 0.370  ; modulo_divider:inst2|count[19] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.522      ;
; 0.446  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[1]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.598      ;
; 0.491  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.643      ;
; 0.494  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[2]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.646      ;
; 0.494  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.646      ;
; 0.494  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.646      ;
; 0.495  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.647      ;
; 0.496  ; modulo_divider:inst2|count[22] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.648      ;
; 0.496  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.648      ;
; 0.497  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.497  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.497  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.507  ; modulo_divider:inst2|count[23] ; modulo_divider:inst2|count[24] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.659      ;
; 0.507  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.659      ;
; 0.507  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[22] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.659      ;
; 0.507  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.659      ;
; 0.509  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.661      ;
; 0.509  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.661      ;
; 0.509  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.661      ;
; 0.510  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.662      ;
; 0.510  ; modulo_divider:inst2|count[19] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.662      ;
; 0.510  ; modulo_divider:inst2|count[18] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.662      ;
; 0.526  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.678      ;
; 0.529  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.681      ;
; 0.529  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.681      ;
; 0.529  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.681      ;
; 0.530  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.682      ;
; 0.531  ; modulo_divider:inst2|count[22] ; modulo_divider:inst2|count[24] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.683      ;
; 0.531  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.683      ;
; 0.532  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.684      ;
; 0.532  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.684      ;
; 0.542  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.694      ;
; 0.542  ; modulo_divider:inst2|count[2]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.694      ;
; 0.544  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.696      ;
; 0.544  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.696      ;
; 0.544  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.696      ;
; 0.545  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.697      ;
; 0.545  ; modulo_divider:inst2|count[18] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.697      ;
; 0.547  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 0.696      ;
; 0.549  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.701      ;
; 0.552  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[21] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.704      ;
; 0.561  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[16] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.713      ;
; 0.564  ; modulo_divider:inst2|count[1]  ; modulo_divider:inst2|count[4]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.716      ;
; 0.564  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.716      ;
; 0.564  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.716      ;
; 0.565  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.717      ;
; 0.566  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.718      ;
; 0.567  ; modulo_divider:inst2|count[17] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.719      ;
; 0.577  ; modulo_divider:inst2|count[21] ; modulo_divider:inst2|count[24] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.729      ;
; 0.579  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[8]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.579  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.579  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.580  ; modulo_divider:inst2|count[9]  ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.732      ;
; 0.582  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 0.731      ;
; 0.584  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[6]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.736      ;
; 0.586  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[2]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.738      ;
; 0.587  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[22] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.739      ;
; 0.587  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 0.736      ;
; 0.596  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[17] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.748      ;
; 0.599  ; modulo_divider:inst2|count[6]  ; modulo_divider:inst2|count[10] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.751      ;
; 0.599  ; modulo_divider:inst2|count[8]  ; modulo_divider:inst2|count[12] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.751      ;
; 0.600  ; modulo_divider:inst2|count[14] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.752      ;
; 0.601  ; modulo_divider:inst2|count[3]  ; modulo_divider:inst2|count[5]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.753      ;
; 0.601  ; modulo_divider:inst2|count[15] ; modulo_divider:inst2|count[19] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.753      ;
; 0.604  ; modulo_divider:inst2|count[19] ; modulo_divider:inst2|count[21] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.756      ;
; 0.614  ; modulo_divider:inst2|count[5]  ; modulo_divider:inst2|count[9]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.766      ;
; 0.614  ; modulo_divider:inst2|count[7]  ; modulo_divider:inst2|count[11] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.766      ;
; 0.614  ; modulo_divider:inst2|count[16] ; modulo_divider:inst2|count[20] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.766      ;
; 0.617  ; modulo_divider:inst2|count[12] ; modulo_divider:inst2|count[15] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 0.766      ;
; 0.619  ; modulo_divider:inst2|count[4]  ; modulo_divider:inst2|count[7]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.771      ;
; 0.621  ; modulo_divider:inst2|count[0]  ; modulo_divider:inst2|count[3]  ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.773      ;
; 0.622  ; modulo_divider:inst2|count[20] ; modulo_divider:inst2|count[23] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.774      ;
; 0.622  ; modulo_divider:inst2|count[11] ; modulo_divider:inst2|count[14] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 0.771      ;
; 0.622  ; modulo_divider:inst2|count[10] ; modulo_divider:inst2|count[13] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; -0.003     ; 0.771      ;
; 0.631  ; modulo_divider:inst2|count[13] ; modulo_divider:inst2|count[18] ; CLOCK_50                       ; CLOCK_50    ; 0.000        ; 0.000      ; 0.783      ;
+--------+--------------------------------+--------------------------------+--------------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'modulo_divider:inst2|count[24]'                                                                                       ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node  ; Launch Clock                   ; Latch Clock                    ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+
; 0.215 ; inst4[0]  ; inst4[0] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; inst4[1]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; inst4[2]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; inst4[3]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.367      ;
; 0.244 ; inst4[1]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.396      ;
; 0.247 ; inst4[0]  ; inst4[1] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.399      ;
; 0.248 ; inst4[0]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.400      ;
; 0.363 ; inst4[1]  ; inst4[2] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.515      ;
; 0.365 ; inst4[0]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.517      ;
; 0.368 ; inst4[2]  ; inst4[3] ; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 0.000        ; 0.000      ; 0.520      ;
+-------+-----------+----------+--------------------------------+--------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                         ;
+--------+--------------+----------------+------------------+----------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+----------+------------+--------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[16] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[16] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[17] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[17] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[18] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[18] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[19] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[19] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[20] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[20] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[21] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[21] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[22] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[22] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[23] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[23] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[24] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[24] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; modulo_divider:inst2|count[9]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[16]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[16]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[17]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[17]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[18]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[18]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[19]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[19]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[20]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[20]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[21]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[21]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[22]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[22]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[23]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[23]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[24]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[24]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; inst2|count[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; inst2|count[6]|clk             ;
+--------+--------------+----------------+------------------+----------+------------+--------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'modulo_divider:inst2|count[24]'                                                                           ;
+--------+--------------+----------------+------------------+--------------------------------+------------+----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                          ; Clock Edge ; Target                           ;
+--------+--------------+----------------+------------------+--------------------------------+------------+----------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst2|count[24]~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[0]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[1]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[2]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; modulo_divider:inst2|count[24] ; Rise       ; inst4[3]|clk                     ;
+--------+--------------+----------------+------------------+--------------------------------+------------+----------------------------------+


+----------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                    ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; Data Port ; Clock Port                     ; Rise  ; Fall  ; Clock Edge ; Clock Reference                ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; HEX0[*]   ; modulo_divider:inst2|count[24] ; 4.212 ; 4.212 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[0]  ; modulo_divider:inst2|count[24] ; 4.185 ; 4.185 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[1]  ; modulo_divider:inst2|count[24] ; 4.212 ; 4.212 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[2]  ; modulo_divider:inst2|count[24] ; 4.144 ; 4.144 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[3]  ; modulo_divider:inst2|count[24] ; 4.205 ; 4.205 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[4]  ; modulo_divider:inst2|count[24] ; 4.082 ; 4.082 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[5]  ; modulo_divider:inst2|count[24] ; 4.091 ; 4.091 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[6]  ; modulo_divider:inst2|count[24] ; 4.087 ; 4.087 ; Rise       ; modulo_divider:inst2|count[24] ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+


+----------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                            ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; Data Port ; Clock Port                     ; Rise  ; Fall  ; Clock Edge ; Clock Reference                ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; HEX0[*]   ; modulo_divider:inst2|count[24] ; 3.720 ; 3.720 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[0]  ; modulo_divider:inst2|count[24] ; 3.814 ; 3.814 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[1]  ; modulo_divider:inst2|count[24] ; 3.849 ; 3.849 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[2]  ; modulo_divider:inst2|count[24] ; 3.788 ; 3.788 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[3]  ; modulo_divider:inst2|count[24] ; 3.832 ; 3.832 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[4]  ; modulo_divider:inst2|count[24] ; 3.722 ; 3.722 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[5]  ; modulo_divider:inst2|count[24] ; 3.720 ; 3.720 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[6]  ; modulo_divider:inst2|count[24] ; 3.724 ; 3.724 ; Rise       ; modulo_divider:inst2|count[24] ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+


+-----------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                           ;
+---------------------------------+---------+--------+----------+---------+---------------------+
; Clock                           ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+---------------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack                ; -2.940  ; -2.504 ; N/A      ; N/A     ; -1.631              ;
;  CLOCK_50                       ; -2.940  ; -2.504 ; N/A      ; N/A     ; -1.631              ;
;  modulo_divider:inst2|count[24] ; -0.259  ; 0.215  ; N/A      ; N/A     ; -0.611              ;
; Design-wide TNS                 ; -45.35  ; -2.504 ; 0.0      ; 0.0     ; -37.069             ;
;  CLOCK_50                       ; -44.865 ; -2.504 ; N/A      ; N/A     ; -32.181             ;
;  modulo_divider:inst2|count[24] ; -0.485  ; 0.000  ; N/A      ; N/A     ; -4.888              ;
+---------------------------------+---------+--------+----------+---------+---------------------+


+----------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                    ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; Data Port ; Clock Port                     ; Rise  ; Fall  ; Clock Edge ; Clock Reference                ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; HEX0[*]   ; modulo_divider:inst2|count[24] ; 8.555 ; 8.555 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[0]  ; modulo_divider:inst2|count[24] ; 8.498 ; 8.498 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[1]  ; modulo_divider:inst2|count[24] ; 8.555 ; 8.555 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[2]  ; modulo_divider:inst2|count[24] ; 8.418 ; 8.418 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[3]  ; modulo_divider:inst2|count[24] ; 8.541 ; 8.541 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[4]  ; modulo_divider:inst2|count[24] ; 8.212 ; 8.212 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[5]  ; modulo_divider:inst2|count[24] ; 8.224 ; 8.224 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[6]  ; modulo_divider:inst2|count[24] ; 8.222 ; 8.222 ; Rise       ; modulo_divider:inst2|count[24] ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+


+----------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                            ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; Data Port ; Clock Port                     ; Rise  ; Fall  ; Clock Edge ; Clock Reference                ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+
; HEX0[*]   ; modulo_divider:inst2|count[24] ; 3.720 ; 3.720 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[0]  ; modulo_divider:inst2|count[24] ; 3.814 ; 3.814 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[1]  ; modulo_divider:inst2|count[24] ; 3.849 ; 3.849 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[2]  ; modulo_divider:inst2|count[24] ; 3.788 ; 3.788 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[3]  ; modulo_divider:inst2|count[24] ; 3.832 ; 3.832 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[4]  ; modulo_divider:inst2|count[24] ; 3.722 ; 3.722 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[5]  ; modulo_divider:inst2|count[24] ; 3.720 ; 3.720 ; Rise       ; modulo_divider:inst2|count[24] ;
;  HEX0[6]  ; modulo_divider:inst2|count[24] ; 3.724 ; 3.724 ; Rise       ; modulo_divider:inst2|count[24] ;
+-----------+--------------------------------+-------+-------+------------+--------------------------------+


+-------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                             ;
+--------------------------------+--------------------------------+----------+----------+----------+----------+
; From Clock                     ; To Clock                       ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+--------------------------------+--------------------------------+----------+----------+----------+----------+
; CLOCK_50                       ; CLOCK_50                       ; 324      ; 0        ; 0        ; 0        ;
; modulo_divider:inst2|count[24] ; CLOCK_50                       ; 1        ; 1        ; 0        ; 0        ;
; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 10       ; 0        ; 0        ; 0        ;
+--------------------------------+--------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                              ;
+--------------------------------+--------------------------------+----------+----------+----------+----------+
; From Clock                     ; To Clock                       ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+--------------------------------+--------------------------------+----------+----------+----------+----------+
; CLOCK_50                       ; CLOCK_50                       ; 324      ; 0        ; 0        ; 0        ;
; modulo_divider:inst2|count[24] ; CLOCK_50                       ; 1        ; 1        ; 0        ; 0        ;
; modulo_divider:inst2|count[24] ; modulo_divider:inst2|count[24] ; 10       ; 0        ; 0        ; 0        ;
+--------------------------------+--------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 1     ; 1    ;
; Unconstrained Input Port Paths  ; 29    ; 29   ;
; Unconstrained Output Ports      ; 7     ; 7    ;
; Unconstrained Output Port Paths ; 28    ; 28   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed Mar 14 17:40:11 2018
Info: Command: quartus_sta lab1_start -c lab1_start
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'lab1_start.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name modulo_divider:inst2|count[24] modulo_divider:inst2|count[24]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.940
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.940       -44.865 CLOCK_50 
    Info (332119):    -0.259        -0.485 modulo_divider:inst2|count[24] 
Info (332146): Worst-case hold slack is -2.504
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.504        -2.504 CLOCK_50 
    Info (332119):     0.445         0.000 modulo_divider:inst2|count[24] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631       -32.181 CLOCK_50 
    Info (332119):    -0.611        -4.888 modulo_divider:inst2|count[24] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.649
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.649        -5.256 CLOCK_50 
    Info (332119):     0.512         0.000 modulo_divider:inst2|count[24] 
Info (332146): Worst-case hold slack is -1.691
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.691        -1.691 CLOCK_50 
    Info (332119):     0.215         0.000 modulo_divider:inst2|count[24] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -26.380 CLOCK_50 
    Info (332119):    -0.500        -4.000 modulo_divider:inst2|count[24] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 459 megabytes
    Info: Processing ended: Wed Mar 14 17:40:12 2018
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


